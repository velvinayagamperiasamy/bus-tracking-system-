Smart Bus Tracking System
Overview

The Smart Bus Tracking System is a web-based application designed to track the location of buses in real-time. This project includes a backend server using Node.js, a MySQL database for data storage, and a user-friendly interface for displaying location updates.
Features

    Real-time location tracking of buses.
    Database integration using MySQL.
    Easy-to-use interface for admin and users.

Prerequisites

Ensure you have the following installed on your system:

    Node.js (v18.19.1 or later) - Download Node.js
    MySQL Community Server - Download MySQL
    MySQL Workbench (Optional for database management) - Included in the MySQL installer.
    A code editor like Visual Studio Code - Download VS Code

Installation Steps
1. Clone the Project

Download or clone the project repository:

git clone https://github.com/your-repo/smart-bus-tracking.git
cd smart-bus-tracking

2. Install Node.js Dependencies

Navigate to the project folder and install the required dependencies:

npm install

3. Set Up MySQL Database

    Open MySQL Command Line or MySQL Workbench.
    Create the database and tables:

CREATE DATABASE smart_bus_tracking;
USE smart_bus_tracking;

CREATE TABLE buses (
    bus_id INT AUTO_INCREMENT PRIMARY KEY,
    bus_name VARCHAR(50) NOT NULL,
    driver_name VARCHAR(50) NOT NULL,
    route VARCHAR(100) NOT NULL
);

CREATE TABLE bus_locations (
    id INT AUTO_INCREMENT PRIMARY KEY,
    bus_id INT NOT NULL,
    latitude FLOAT NOT NULL,
    longitude FLOAT NOT NULL,
    last_updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

Populate with sample data:

    INSERT INTO buses (bus_name, driver_name, route)
    VALUES
    ('Bus A', 'Driver A', 'Route 1'),
    ('Bus B', 'Driver B', 'Route 2');

    INSERT INTO bus_locations (bus_id, latitude, longitude)
    VALUES
    (1, 12.9716, 77.5946),
    (2, 13.0827, 80.2707);

4. Configure the Backend

    Open the server.js file in a text editor.
    Update the database credentials:

    const db = mysql.createConnection({
        host: 'localhost',
        user: 'root',
        password: 'your_password', // Replace with your MySQL password
        database: 'smart_bus_tracking',
    });

5. Run the Server

Start the Node.js backend server:

node server.js

The backend will run at http://localhost:3000.
6. Access the Application

    Open your web browser.
    Navigate to http://localhost:3000 to access the application.

Testing the System

    Check Database Connection Ensure the database tables (buses and bus_locations) are populated with sample data.

    Simulate Location Updates Use SQL queries to add or update locations in the bus_locations table:

INSERT INTO bus_locations (bus_id, latitude, longitude)
VALUES (1, 12.9756, 77.5892);

Verify API Endpoints Test the API endpoints using tools like Postman or cURL:

    Fetch the latest location of a specific bus:

        GET http://localhost:3000/api/bus/1

Project Structure

smart-bus-tracking/
├── server.js        # Backend server code
├── package.json     # Node.js dependencies
├── README.md        # Project documentation
├── public/          # Static frontend files
│   ├── index.html   # Main interface
│   ├── styles.css   # Stylesheet
│   ├── script.js    # Frontend logic
└── sql-scripts/     # SQL setup scripts

Troubleshooting

    Error: ER_ACCESS_DENIED_ERROR
        Ensure your MySQL username and password are correct in server.js.
        Reset the MySQL root password if needed.

    Error: MODULE_NOT_FOUND
        Run npm install to install missing dependencies.

    Database Not Connecting
        Verify that the MySQL service is running in the background.

Future Enhancements

    Implement user authentication for secure access.
    Add a live map for real-time tracking using Google Maps API.

Save this file as README.md in your project directory. You can edit it further to match your project setup precisely. Let me know if you need any modifications or assistance!